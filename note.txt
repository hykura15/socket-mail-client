{
  "username": "hykura15@gmail.com",
  "password": 12345,
  "mailServer": "127.0.0.1",
  "SMTP": 2225,
  "POP3": 3335,
  "autoLoad": 10,
  "filter": {
    "Inbox": [],
    "Important": [],
    "Work": [],
    "Project": [],
    "Spam": []
  }
}




To và các cc không nhìn thấy bcc.
BCC: có thể nhìn thấy các cc và to và không nhìn thấy các bcc khác

ta chia ra như sau:
    - ta gửi to và cc đầu tiên
    - sau đó gửi từng bcc một

base64.b64decode(string).decode(FORMAT)
    # file_paths = ["C:\\Users\\asus\\Desktop\\text.zip",]
    # # file_paths = ["C:\\Users\\asus\\Desktop\\sample.pdf",
    # #             #   "C:\\Users\\asus\\Desktop\\hello.txt",
    # #             #   "C:\\Users\\asus\\Desktop\\statics1.xlsx",
    # #             #   "C:\\Users\\asus\\Desktop\\ProjectOrganization.png"
    # #             ]
    # Attach file

        # sender = 'your_email@example.com'
    # to = ['hykura15@gmail.com', 'hykura01@gmail.com']
    # # cc = ['voho39850@gmail.com', 'voho39851@gmail.com']
    # # bcc = ['bcc1@gmail.com', 'bcc2@gmail.com']
    # subject = 'Test Email with Attachment'
    # body = 't\n\n\nt\n\n\nt'

    create Database Socket_Account
go

use Socket_Account
go

create table Account(
	username varchar(50) NOT NULL,
	pass varchar(50) NOT NULL,
)
go
insert Account values ('hykura15@gmail.com', 'Reem@123')
insert Account values ('hykura01@gmail.com', 'Reem@123')
insert Account values ('voho39850@gmail.com', 'Reem@123')

{
    "1": {
        "id": 1,
        "pass": 123
    },
    "2": {
        "id": 1,
        "pass": 123
    },
    "3": {
        "id": 1,
        "pass": 123
    },
    "14": {
        "id": 1,
        "pass": 123
    },
    "5": {
        "id": 1,
        "pass": 123
    },
    "6": {
        "id": 1,
        "pass": 123
    },
    "7": {
        "id": 1,
        "pass": 123
    }
}




import tkinter as tk
from tkinter import ttk, filedialog
import client


sender_email_var = None
recipient_email_var = None
cc_email_var = None
bcc_email_var = None
subject_var = None
message_body_var = None
attachment_path_var = None

def create_email_composer():
    global sender_email_var, recipient_email_var, cc_email_var, bcc_email_var
    global subject_var, message_body_var, attachment_path_var

    root = tk.Tk()
    root.title("Email Composer")

    sender_email_var = tk.StringVar()
    recipient_email_var = tk.StringVar()
    cc_email_var = tk.StringVar()
    bcc_email_var = tk.StringVar()
    subject_var = tk.StringVar()
    attachment_path_var = tk.StringVar()

    # Create and place widgets
    label_from = ttk.Label(root, text="From:")
    label_from.grid(row=0, column=0, padx=10, pady=5, sticky=tk.W)

    entry_from = ttk.Entry(root, width=30, textvariable=sender_email_var)
    entry_from.grid(row=0, column=1, padx=10, pady=5)

    label_to = ttk.Label(root, text="To:")
    label_to.grid(row=1, column=0, padx=10, pady=5, sticky=tk.W)

    entry_to = ttk.Entry(root, width=30, textvariable=recipient_email_var)
    entry_to.grid(row=1, column=1, padx=10, pady=5)

    label_cc = ttk.Label(root, text="Cc:")
    label_cc.grid(row=2, column=0, padx=10, pady=5, sticky=tk.W)

    entry_cc = ttk.Entry(root, width=30, textvariable=cc_email_var)
    entry_cc.grid(row=2, column=1, padx=10, pady=5)

    label_bcc = ttk.Label(root, text="BCC:")
    label_bcc.grid(row=3, column=0, padx=10, pady=5, sticky=tk.W)

    entry_bcc = ttk.Entry(root, width=30, textvariable=bcc_email_var)
    entry_bcc.grid(row=3, column=1, padx=10, pady=5)

    label_subject = ttk.Label(root, text="Subject:")
    label_subject.grid(row=4, column=0, padx=10, pady=5, sticky=tk.W)

    entry_subject = ttk.Entry(root, width=30, textvariable=subject_var)
    entry_subject.grid(row=4, column=1, padx=10, pady=5)

    label_message = ttk.Label(root, text="Message:")
    label_message.grid(row=5, column=0, padx=10, pady=5, sticky=tk.W)

    text_message = tk.Text(root, width=30, height=10)
    text_message.grid(row=5, column=1, padx=10, pady=5)
    message_body_var = text_message

    label_attachment = ttk.Label(root, text="Attachment:")
    label_attachment.grid(row=6, column=0, padx=10, pady=5, sticky=tk.W)

    entry_attachment = ttk.Entry(
        root, width=20, textvariable=attachment_path_var)
    entry_attachment.grid(row=6, column=1, padx=10, pady=5)

    button_attach = ttk.Button(root, text="Attach File", command=attach_file)
    button_attach.grid(row=6, column=2, padx=10, pady=5)

    button_send = ttk.Button(root, text="Send Email", command=send_email)
    button_send.grid(row=7, column=0, columnspan=2, pady=10)
    
    
    button_receive = ttk.Button(root, text="Receive Mail", command=show_mail_folders)
    button_receive.grid(row=7, column=2, padx=10, pady=5)

    # Add a notebook to manage different frames for each folder
    notebook = ttk.Notebook(root)
    notebook.grid(row=8, column=0, columnspan=3, pady=10, padx=10, sticky="nsew")

    # Create frames for different folders
    folders = ["Inbox", "Important", "Project", "Spam", "Work"]
    frames = {folder: ttk.Frame(notebook) for folder in folders}

    for folder in folders:
        notebook.add(frames[folder], text=folder)
    
    
    # Run the Tkinter event loop
    root.mainloop()




def attach_file():
    file_paths = filedialog.askopenfilenames(title="Select Files")
    attachment_path_var.set(";".join(file_paths))

def send_email():
    sender_email = sender_email_var.get()
    recipient_email = recipient_email_var.get().split(' ')
    cc_email = cc_email_var.get().split(' ')
    bcc_email = bcc_email_var.get().split(' ')
    subject = subject_var.get()
    message_body = message_body_var.get("1.0", "end-1c")
    attachment_path = attachment_path_var.get()
    if len(attachment_path) != 0:
        attachment_path = attachment_path.split(';')
    client.send_email(sender_email, recipient_email, cc_email,
                      bcc_email, subject, message_body, attachment_path)

def show_mail_folders():
    # Access the global frames variable
    global frames
    
    # Simulated emails for demonstration purposes
    email_data = {
        "Inbox": ["Email 1", "Email 2", "Email 3"],
        "Important": ["Important Email 1", "Important Email 2"],
        "Project": ["Project Update 1", "Project Update 2"],
        "Spam": ["Spam Email 1", "Spam Email 2"],
        "Work": ["Work Email 1", "Work Email 2", "Work Email 3"],
    }

    for folder, emails in email_data.items():
        # Clear previous content in the frame
        for widget in frames[folder].winfo_children():
            widget.destroy()

        # Display the list of emails in the corresponding frame
        label = ttk.Label(frames[folder], text=f"Displaying {folder} emails:")
        label.pack(padx=10, pady=5)

        for email in emails:
            email_label = ttk.Label(frames[folder], text=email)
            email_label.pack(padx=10, pady=2)

# Example of using the function
create_email_composer()


[('Not Seen', 'a', '1', '1', "['hello.txt', 'Link.txt']", "['ZHNqZm5sc2pkbmZsa3NkbWZsa21zZGtmbWxrc2RqZmxzZGZsa3NtZGxrZmw=', 'aHR0cHM6Ly93d3cubG9vbS5jb20vc2hhcmUvYTQ4MjViOTVlMjFmNGRiNWI4ZDgxMjhiMDY4MjEyYzUNClTDoGkgbGnhu4d1IHRoYW0ga2jhuqNvIFdpcmVzaGFya1VSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMWZ1dGd4dy04TGZkbHhZQjNucVFJLWxuN1FVMDJVY0tXDQpUw6BpIGxp4buHdSBQYWNrZXIgVHJhY2tlclVSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xZzA1TUpCNTRjODlFT0lGcDR2Mm9MYlZ0ZGNjc0JNTFUvdmlldw==']", 'EC2FD22F-6C48-4A68-B630-7E3AD3190775'), ('Not Seen', '2', '2', '2', "['sample.pdf', 'webclient.py']", "['JVBERi0xLjMNCiXi48/TDQoNCjEgMCBvYmoNCjw8DQovVHlwZSAvQ2F0YWxvZw0KL091dGxp', 'aW1wb3J0IHNvY2tldA0KDQpzID0gc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCwgc29ja2V0LlNPQ0tfU1RSRUFNKQ0Kcy5jb25uZWN0KCgiZXhhbXBsZS5jb20iLCA4MCkpDQpyZXF1ZXN0ID0gIkdFVCAvIEhUVFAvMS4wXHJcbkhvc3Q6ZXhhbXBsZS5jb21cclxuXHJcbiINCnMuc2VuZChyZXF1ZXN0LmVuY29kZSgpKQ0KZGF0YSA9IHMucmVjdigxMDAwMCkNCnByaW50KGRhdGEpDQpzLmNsb3NlKCk=']", '769939E9-66CE-423C-A685-592D0984E531'), ('Not Seen', '3', '3', '3', "['Link.txt', 'sample.pdf']", "['aHR0cHM6Ly93d3cubG9vbS5jb20vc2hhcmUvYTQ4MjViOTVlMjFmNGRiNWI4ZDgxMjhiMDY4MjEyYzUNClTDoGkgbGnhu4d1IHRoYW0ga2jhuqNvIFdpcmVzaGFya1VSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMWZ1dGd4dy04TGZkbHhZQjNucVFJLWxuN1FVMDJVY0tXDQpUw6BpIGxp4buHdSBQYWNrZXIgVHJhY2tlclVSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xZzA1TUpCNTRjODlFT0lGcDR2Mm9MYlZ0ZGNjc0JNTFUvdmlldw==', 'JVBERi0xLjMNCiXi48/TDQoNCjEgMCBvYmoNCjw8DQovVHlwZSAvQ2F0YWxvZw0KL091dGxp']", '2E3C6728-6829-401F-801B-F46F865B287C'), ('Not Seen', 'a', '1', '1', "['hello.txt', 'Link.txt']", "['ZHNqZm5sc2pkbmZsa3NkbWZsa21zZGtmbWxrc2RqZmxzZGZsa3NtZGxrZmw=', 'aHR0cHM6Ly93d3cubG9vbS5jb20vc2hhcmUvYTQ4MjViOTVlMjFmNGRiNWI4ZDgxMjhiMDY4MjEyYzUNClTDoGkgbGnhu4d1IHRoYW0ga2jhuqNvIFdpcmVzaGFya1VSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMWZ1dGd4dy04TGZkbHhZQjNucVFJLWxuN1FVMDJVY0tXDQpUw6BpIGxp4buHdSBQYWNrZXIgVHJhY2tlclVSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xZzA1TUpCNTRjODlFT0lGcDR2Mm9MYlZ0ZGNjc0JNTFUvdmlldw==']", '3822BD74-D55B-441D-A0A3-0FDED5E81462'), ('Not Seen', '2', '2', '2', "['sample.pdf', 'webclient.py']", "['JVBERi0xLjMNCiXi48/TDQoNCjEgMCBvYmoNCjw8DQovVHlwZSAvQ2F0YWxvZw0KL091dGxp', 'aW1wb3J0IHNvY2tldA0KDQpzID0gc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCwgc29ja2V0LlNPQ0tfU1RSRUFNKQ0Kcy5jb25uZWN0KCgiZXhhbXBsZS5jb20iLCA4MCkpDQpyZXF1ZXN0ID0gIkdFVCAvIEhUVFAvMS4wXHJcbkhvc3Q6ZXhhbXBsZS5jb21cclxuXHJcbiINCnMuc2VuZChyZXF1ZXN0LmVuY29kZSgpKQ0KZGF0YSA9IHMucmVjdigxMDAwMCkNCnByaW50KGRhdGEpDQpzLmNsb3NlKCk=']", 'CD23A7D6-9E68-45DF-945F-31922AEBCC3B'), ('Not Seen', '3', '3', '3', "['Link.txt', 'sample.pdf']", "['aHR0cHM6Ly93d3cubG9vbS5jb20vc2hhcmUvYTQ4MjViOTVlMjFmNGRiNWI4ZDgxMjhiMDY4MjEyYzUNClTDoGkgbGnhu4d1IHRoYW0ga2jhuqNvIFdpcmVzaGFya1VSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMWZ1dGd4dy04TGZkbHhZQjNucVFJLWxuN1FVMDJVY0tXDQpUw6BpIGxp4buHdSBQYWNrZXIgVHJhY2tlclVSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xZzA1TUpCNTRjODlFT0lGcDR2Mm9MYlZ0ZGNjc0JNTFUvdmlldw==', 'JVBERi0xLjMNCiXi48/TDQoNCjEgMCBvYmoNCjw8DQovVHlwZSAvQ2F0YWxvZw0KL091dGxp']", '6C9F86A9-8D5E-4B7D-A063-85160AAE9C9F'), ('Not Seen', 'a', '1', '1', "['hello.txt', 'Link.txt']", "['ZHNqZm5sc2pkbmZsa3NkbWZsa21zZGtmbWxrc2RqZmxzZGZsa3NtZGxrZmw=', 'aHR0cHM6Ly93d3cubG9vbS5jb20vc2hhcmUvYTQ4MjViOTVlMjFmNGRiNWI4ZDgxMjhiMDY4MjEyYzUNClTDoGkgbGnhu4d1IHRoYW0ga2jhuqNvIFdpcmVzaGFya1VSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMWZ1dGd4dy04TGZkbHhZQjNucVFJLWxuN1FVMDJVY0tXDQpUw6BpIGxp4buHdSBQYWNrZXIgVHJhY2tlclVSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xZzA1TUpCNTRjODlFT0lGcDR2Mm9MYlZ0ZGNjc0JNTFUvdmlldw==']", '2F61B4EE-6F7C-4532-8E21-966C34ECEC87'), ('Not Seen', '2', '2', '2', "['sample.pdf', 'webclient.py']", "['JVBERi0xLjMNCiXi48/TDQoNCjEgMCBvYmoNCjw8DQovVHlwZSAvQ2F0YWxvZw0KL091dGxp', 'aW1wb3J0IHNvY2tldA0KDQpzID0gc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCwgc29ja2V0LlNPQ0tfU1RSRUFNKQ0Kcy5jb25uZWN0KCgiZXhhbXBsZS5jb20iLCA4MCkpDQpyZXF1ZXN0ID0gIkdFVCAvIEhUVFAvMS4wXHJcbkhvc3Q6ZXhhbXBsZS5jb21cclxuXHJcbiINCnMuc2VuZChyZXF1ZXN0LmVuY29kZSgpKQ0KZGF0YSA9IHMucmVjdigxMDAwMCkNCnByaW50KGRhdGEpDQpzLmNsb3NlKCk=']", '66151CFF-B9B6-4662-92F3-DD1F8FFF9115'), ('Not Seen', '3', '3', '3', "['Link.txt', 'sample.pdf']", "['aHR0cHM6Ly93d3cubG9vbS5jb20vc2hhcmUvYTQ4MjViOTVlMjFmNGRiNWI4ZDgxMjhiMDY4MjEyYzUNClTDoGkgbGnhu4d1IHRoYW0ga2jhuqNvIFdpcmVzaGFya1VSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMWZ1dGd4dy04TGZkbHhZQjNucVFJLWxuN1FVMDJVY0tXDQpUw6BpIGxp4buHdSBQYWNrZXIgVHJhY2tlclVSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xZzA1TUpCNTRjODlFT0lGcDR2Mm9MYlZ0ZGNjc0JNTFUvdmlldw==', 'JVBERi0xLjMNCiXi48/TDQoNCjEgMCBvYmoNCjw8DQovVHlwZSAvQ2F0YWxvZw0KL091dGxp']", '73BA6F7F-438C-4ACD-AF41-98D7DD604063'), ('Not Seen', 'a', '1', '1', "['hello.txt', 'Link.txt']", "['ZHNqZm5sc2pkbmZsa3NkbWZsa21zZGtmbWxrc2RqZmxzZGZsa3NtZGxrZmw=', 'aHR0cHM6Ly93d3cubG9vbS5jb20vc2hhcmUvYTQ4MjViOTVlMjFmNGRiNWI4ZDgxMjhiMDY4MjEyYzUNClTDoGkgbGnhu4d1IHRoYW0ga2jhuqNvIFdpcmVzaGFya1VSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMWZ1dGd4dy04TGZkbHhZQjNucVFJLWxuN1FVMDJVY0tXDQpUw6BpIGxp4buHdSBQYWNrZXIgVHJhY2tlclVSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xZzA1TUpCNTRjODlFT0lGcDR2Mm9MYlZ0ZGNjc0JNTFUvdmlldw==']", '90FBF5F2-6B98-49C6-A8C0-777B82F5880E'), ('Not Seen', '2', '2', '2', "['sample.pdf', 'webclient.py']", "['JVBERi0xLjMNCiXi48/TDQoNCjEgMCBvYmoNCjw8DQovVHlwZSAvQ2F0YWxvZw0KL091dGxp', 'aW1wb3J0IHNvY2tldA0KDQpzID0gc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCwgc29ja2V0LlNPQ0tfU1RSRUFNKQ0Kcy5jb25uZWN0KCgiZXhhbXBsZS5jb20iLCA4MCkpDQpyZXF1ZXN0ID0gIkdFVCAvIEhUVFAvMS4wXHJcbkhvc3Q6ZXhhbXBsZS5jb21cclxuXHJcbiINCnMuc2VuZChyZXF1ZXN0LmVuY29kZSgpKQ0KZGF0YSA9IHMucmVjdigxMDAwMCkNCnByaW50KGRhdGEpDQpzLmNsb3NlKCk=']", '750B8B75-3A9B-4D44-B32D-53E37347CE55'), ('Not Seen', '3', '3', '3', "['Link.txt', 'sample.pdf']", "['aHR0cHM6Ly93d3cubG9vbS5jb20vc2hhcmUvYTQ4MjViOTVlMjFmNGRiNWI4ZDgxMjhiMDY4MjEyYzUNClTDoGkgbGnhu4d1IHRoYW0ga2jhuqNvIFdpcmVzaGFya1VSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2RyaXZlL2ZvbGRlcnMvMWZ1dGd4dy04TGZkbHhZQjNucVFJLWxuN1FVMDJVY0tXDQpUw6BpIGxp4buHdSBQYWNrZXIgVHJhY2tlclVSTDogaHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xZzA1TUpCNTRjODlFT0lGcDR2Mm9MYlZ0ZGNjc0JNTFUvdmlldw==', 'JVBERi0xLjMNCiXi48/TDQoNCjEgMCBvYmoNCjw8DQovVHlwZSAvQ2F0YWxvZw0KL091dGxp']", '8E2A9A02-A968-408F-9597-D04C24CE7792')]